package si5.univas.entity;
// Generated 03/05/2017 20:58:23 by Hibernate Tools 5.2.1.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * Produto generated by hbm2java
 */
@Entity
@Table(name = "produto", schema = "public")
public class Produto implements java.io.Serializable {
	private static final long serialVersionUID = 1L;
	
	private Integer cod;
	private String nome;
	private int qtd;
	private Set<Item> items = new HashSet<Item>(0);

	public Produto() {
	}

	public Produto(int saldo) {
		this.qtd = saldo;
	}

	public Produto(String nome, int saldo, Set<Item> items) {
		this.nome = nome;
		this.qtd = saldo;
		this.items = items;
	}

	@GenericGenerator(name = "generator", strategy = "org.hibernate.id.enhanced.SequenceStyleGenerator", parameters = {
			@Parameter(name = "optimizer", value = "none"),
			@Parameter(name = "sequence_name", value = "public.seq_produto"),
			@Parameter(name = "increment_size", value = "1") })
	@Id
	@GeneratedValue(generator = "generator")

	@Column(name = "cod", unique = true, nullable = false)
	public Integer getCod() {
		return this.cod;
	}

	public void setCod(Integer cod) {
		this.cod = cod;
	}

	@Column(name = "nome", length = 50)
	public String getNome() {
		return this.nome;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

	@Column(name = "qtd", nullable = false)
	public int getSaldo() {
		return this.qtd;
	}

	public void setSaldo(int saldo) {
		this.qtd = saldo;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "produto")
	public Set<Item> getItems() {
		return this.items;
	}

	public void setItems(Set<Item> items) {
		this.items = items;
	}
	
	@Override
	public String toString() {
		return String.valueOf(getNome());
	}

}
